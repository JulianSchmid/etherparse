name: main

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  test:
    name: cargo build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
        - linux-stable
        - linux-32bit-stable
        - linux-beta
        - linux-nightly
        - macos-stable
        - win-msvc-stable
        - win-gnu-stable
        include:
        - build: linux-stable
          os: ubuntu-latest
          rust: stable
        - build: linux-32bit-stable
          os: ubuntu-latest
          rust: stable
          target: i686-unknown-linux-gnu
        - build: linux-beta
          os: ubuntu-latest
          rust: beta
        - build: linux-nightly
          os: ubuntu-latest
          rust: nightly
        - build: macos-stable
          os: macos-latest
          rust: stable
        - build: win-msvc-stable
          os: windows-latest
          rust: stable
        - build: win-gnu-stable
          os: windows-latest
          rust: stable-x86_64-gnu
    steps:

    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true

    - name: cargo build
      if: matrix.target == ''
      uses: actions-rs/cargo@v1
      with:
        command: build

    - name: install cross
      if: matrix.target != ''
      run: cargo install cross --locked

    - name: cross build
      if: matrix.target != ''
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target ${{ matrix.target }}

    - name: cargo test
      if: matrix.target == ''
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: cross test
      if: matrix.target != ''
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --target ${{ matrix.target }}

    - name: cargo build --no-default-features
      if: matrix.target == ''
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --no-default-features

    - name: cross build --no-default-features
      if: matrix.target != ''
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target ${{ matrix.target }} --no-default-features

    - name: cargo test --no-default-features
      if: matrix.target == ''
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --no-default-features

    - name: cross test --no-default-features
      if: matrix.target != ''
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --target ${{ matrix.target }} --no-default-features

  no_std_build:
    name: no_std build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./etherparse/ensure_no_std
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-unknown-none
        override: true
    - run: cargo build --target x86_64-unknown-none
